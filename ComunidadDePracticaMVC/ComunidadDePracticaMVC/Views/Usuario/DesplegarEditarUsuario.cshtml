@model ComunidadDePracticaMVC.Models.UsuarioModel

@{
    ViewBag.Title = "EditarUsuario";

    // Crear lista de idiomas
    List<SelectListItem> listaIdiomas = new List<SelectListItem>();
    listaIdiomas.Add(new SelectListItem { Text = "Español", Value = "Español" });
    listaIdiomas.Add(new SelectListItem { Text = "Ingles", Value = "Ingles" });
    listaIdiomas.Add(new SelectListItem { Text = "Frances", Value = "Frances" });
    listaIdiomas.Add(new SelectListItem { Text = "Portugues", Value = "Portugues" });
    ///////////////////////////////////////////////////////////////////////////////////////////


    // Crear lista de Hobbies
    List<SelectListItem> listaHobbies = new List<SelectListItem>();
    listaHobbies.Add(new SelectListItem { Text = "Musica", Value = "Musica" });
    listaHobbies.Add(new SelectListItem { Text = "Leer", Value = "Leer" });
    listaHobbies.Add(new SelectListItem { Text = "Deportes", Value = "Deportes" });
    listaHobbies.Add(new SelectListItem { Text = "Ayudar", Value = "Ayudar" });
    ///////////////////////////////////////////////////////////////////////////////////////////

    // Crear lista de Habilidades
    List<SelectListItem> listaHabilidades = new List<SelectListItem>();
    listaHabilidades.Add(new SelectListItem { Text = "Enseñar", Value = "Enseñar" });
    listaHabilidades.Add(new SelectListItem { Text = "Programar", Value = "Programar" });
    listaHabilidades.Add(new SelectListItem { Text = "Memorizar", Value = "Memorizar" });
    listaHabilidades.Add(new SelectListItem { Text = "Lenguas", Value = "Lenguas" });
    ///////////////////////////////////////////////////////////////////////////////////////////
    ///

    string espaciador = " , ";
}


<h2 align="center">EditarUsuario</h2>



@using (Html.BeginForm("AgregarIdioma", "Usuario"))
{
    <div class="form-group" style="display:none;">
        @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Idioma)
        @Html.DropDownListFor(m => m.Idioma, listaIdiomas, "Escoger Idioma", new { @class = "form-control", @id = "idioma" })
        @Html.ValidationMessageFor(model => model.Idioma, "", new { @class = "text-danger" })
    </div>
    <input type="submit" value="Agregar Idioma" class="btn-success" />
}


<br />

<div class="form-group">

    @Html.DisplayNameFor(model => model.Idioma)
    @foreach (string elemento in Model.Idioma)
    {
        @Html.DisplayTextFor(model => elemento)
        @Html.DisplayTextFor(model => espaciador)
    }
</div>


<br />

@using (Html.BeginForm("AgregarHobbie", "Usuario"))
{
    <div class="form-group" style="display:none;">
        @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Hobbie)
        @Html.DropDownListFor(model => model.Hobbie, listaHobbies, "Escoger Hobbie", new { @class = "form-control", @id = "hobbie" })
        @Html.ValidationMessageFor(model => model.Hobbie, "", new { @class = "text-danger" })
    </div>
    <input type="submit" value="Agregar Hobbie" class="btn-success" />
}

<br />
<div class="form-group">

    @Html.DisplayNameFor(model => model.Hobbie)
    @foreach (string elemento in Model.Hobbie)
    {
        @Html.DisplayTextFor(model => elemento)
        @Html.DisplayTextFor(model => espaciador)
    }
</div>
<br />


@using (Html.BeginForm("AgregarHabilidad", "Usuario"))
{
    <div class="form-group" style="display:none;">
        @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Habilidad)
        @Html.DropDownListFor(model => model.Habilidad, listaHabilidades, "Escoger Habilidad", new { @class = "form-control", @id = "habilidad" })
        @Html.ValidationMessageFor(model => model.Habilidad, "", new { @class = "text-danger" })
    </div>
    <input type="submit" value="Agregar Habilidad" class="btn-success" />
}


    <div class="form-group">

        @Html.DisplayNameFor(model => model.Habilidad)
        @foreach (string elemento in Model.Habilidad)
        {
            @Html.DisplayTextFor(model => elemento)
            @Html.DisplayTextFor(model => espaciador)
        }
    </div>
    <br /><br />

@using (Html.BeginForm("EditarUsuario", "Usuario"))

{

    @Html.AntiForgeryToken()
    <h4 align="center">
        Edite el contenido de su perfil, porfavor rellene los espacios incompletos.
    </h4>
    <br />

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
        </div>

        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @id = "nombre" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apellido1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Apellido1, new { htmlAttributes = new { @class = "form-control", @id = "apellido1" } })
                @Html.ValidationMessageFor(model => model.Apellido1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apellido2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Apellido2, new { htmlAttributes = new { @class = "form-control", @id = "apellido2" } })
                @Html.ValidationMessageFor(model => model.Apellido2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ciudad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Ciudad, new { htmlAttributes = new { @class = "form-control", @id = "ciudad" } })
                @Html.ValidationMessageFor(model => model.Ciudad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pais, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Pais, new { htmlAttributes = new { @class = "form-control", @id = "pais" } })
                @Html.ValidationMessageFor(model => model.Pais, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.Merito, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="merito" class="col-md-6">@Html.DisplayFor(model => model.Merito)</div>
        </div>
        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="peso" class="col-md-6">@Html.DisplayFor(model => model.Peso)</div>
        </div>

        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="categoria" class="col-md-6">@Html.DisplayFor(model => model.Categoria)</div>
        </div>

        <br />
        <br />
        <div class="form-group row ">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" value="Guardar datos" class="btn btn-success" />
                @Html.ActionLink("Cancelar", "DesplegarUsuario", "Usuario", new { correo = User.Identity.Name }, htmlAttributes: new { title = "Devolverse a mi perfil", @class = "btn btn-danger" })
            </div>
            <div class="col-md-2">

            </div>
        </div>
    </div>
}
