@model ComunidadDePracticaMVC.Models.ArticuloModel

<script type="text/javascript" src="~/Scripts/tinymce/tinymce.min.js"></script>
<script type="text/javascript" src="~/Scripts/tinyMCEResumenConfig.js"></script>
<script type="text/javascript" src="~/Scripts/tinyMCEContenidoConfig.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<h1>Editar Articulo corto</h1>
@if (ViewBag.mensaje == "Artículo ha sido guardado")
{
    <div class="alert-success">
        @ViewBag.mensaje
    </div>
}

@if (ViewBag.mensaje == "Articulo no ha sido guardado por titulo duplicado")
{
    <div class="text-danger">
        @ViewBag.mensaje
    </div>
}

@{
    List<SelectListItem> listaNombreCorreo = new List<SelectListItem>();
    foreach (var item in ViewBag.listaAutoresCorreos)
    {
        listaNombreCorreo.Add(new SelectListItem { Value = item[1], Text = item[0] });
    }

    List<SelectListItem> listaTopicos = new List<SelectListItem>();
    foreach (var item in ViewBag.listaTopicos)
    {
        listaTopicos.Add(new SelectListItem { Text = item });
    }
}

@using (Html.BeginForm("Editar", "Articulo", new { id = Model.ArticuloId, hilera = Model.Topico }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-16 col-lg-offset-2">
            <div class="form-group">
                @Html.LabelFor(model => model.Titulo)
                @Html.TextBoxFor(model => model.Titulo, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(d => d.Topico)
                @Html.DropDownListFor(d => d.Topico, listaTopicos, "Escoger topico", new { @value = Model.Topico, @class = "form-control" })
                @Html.ValidationMessageFor(d => d.Topico, "", new { @class = "text-danger" })
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(d => d.Autor)
                    @Html.DropDownListFor(model => model.Autor, listaNombreCorreo, "Escoger autor", new { @class = "form-control" })
                    @Html.ValidationMessageFor(d => d.Autor, "", new { @class = "text-danger" })
                </div>*@

            <div class="form-group">
                @Html.LabelFor(d => d.Resumen)
                @Html.TextAreaFor(d => d.Resumen, new { @class = "form-control" })
                @Html.ValidationMessageFor(d => d.Resumen, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(d => d.Contenido)
                @Html.TextAreaFor(d => d.Contenido, new { @class = "form-control" })
                @Html.ValidationMessageFor(d => d.Contenido, "", new { @class = "text-danger" })
            </div>

            <div class="form-group" style="text-align:right">
                <input type="submit" class="btn btn-success" value="Editar" />
            </div>
        </div>
    </div>
}




<div>
    @Html.ActionLink("Devolverse", "InicioArticulos")
</div>






